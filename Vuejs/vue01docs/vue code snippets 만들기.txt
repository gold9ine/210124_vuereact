

vue code snippets 만들기

https://www.youtube.com/watch?v=t4ESp_po6Wc


    "Vue Instance": {
        "prefix": "vuei",
        "body": [
            "new Vue({",
            "    /* edtmc^2w */",
            "    el: \"${1:}\",",
            "    data: {",
            "        ",
            "    },",
            "    //template: ``,",
            "    methods: {",
            "        ",
            "    },",
            "    components: {",
            "        /* 컴포넌트 등록. 예시) \"태그명\" : 컴포넌트명 */",
            "        ",
            "    }, ",
            "    computed: {",
            "        ",
            "    },",
            "    watch: {",
            "        ",
            "    },",
            "    mounted: function() {",
            "        console.log(\"mounted\");",
            "    },",
            "    updated: function() {",
            "        console.log(\"updated\");",
            "    },",
            "});",
            ""
        ],
        "description": "Vue Instance"
    },
    "Vue Component Gloabl": {
        "prefix": "vuegc",
        "body": [
            "Vue.component(\"${1:${TM_FILENAME_BASE}}\", { ",
            "    /* pdtmc^2w */",
            "    props: [] ,",
            "    data: function() {",
            "        return {",
            "            ",
            "        }",
            "    },",
            "    template: `",
            "        ",
            "    `,",
            "    methods: {",
            "        ",
            "    },",
            "    components: {",
            "        /* 컴포넌트 등록. 예시) \"태그명\" : 컴포넌트명 */",
            "        ",
            "    },",
            "    computed: {",
            "        /* 자동처리 + 동기식. 메서드로 작성. return 필수. */",
            "        ",
            "    },",
            "    watch: {",
            "        /* 자동처리 + 비동기식. data 에 등록된 프로퍼티 모니터링. 메서드로 작성. 매개변수 입력 필수  */",
            "        ",
            "    },",
            "    mounted: function() {",
            "        console.log(\"mounted\");",
            "    },",
            "    updated: function() {",
            "        console.log(\"updated\");",
            "    },",
            "});",
            ""
        ],
        "description": "Vue Global Component"
    },
    "Vue Component Local": {
        "prefix": "vuelc",
        "body": [
            "var ${1:${TM_FILENAME_BASE}} = { ",
            "    /* pdtmc^2w */",
            "    props: [] ,",
            "    data: function() {",
            "        return {",
            "            ",
            "        }",
            "    },",
            "    template: `",
            "        ",
            "    `,",
            "    methods: {",
            "        ",
            "    },",
            "    components: {",
            "        /* 컴포넌트 등록. 예시) \"태그명\" : 컴포넌트명 */",
            "        ",
            "    },",
            "    computed: {",
            "        /* 자동처리 + 동기식. 메서드로 작성. return 필수. */",
            "        ",
            "    },",
            "    watch: {",
            "        /* 자동처리 + 비동기식. data 에 등록된 프로퍼티 모니터링. 메서드로 작성. 매개변수 입력 필수  */",
            "        ",
            "    },",
            "    mounted: function() {",
            "        console.log(\"mounted\");",
            "    },",
            "    updated: function() {",
            "        console.log(\"updated\");",
            "    },",
            "};",
            ""
        ],
        "description": "Vue Local Component"
    },
    "Vue Single File Component": {
        "prefix": "vuefc",
        "body": [
            "<style scoped>",
            "    ",
            "</style>",
            "",
            "<template>",
            "    ",
            "</template>",
            "",
            "<script>",
            "    export default { ",
            "        /* pdtmc^2w */",
            "        props: [] ,",
            "        data: function() {",
            "            return {",
            "                ",
            "            }",
            "        },",
            "        //template: ``,",
            "        methods: {",
            "            ",
            "        },",
            "        components: {",
            "            /* 컴포넌트 등록. 예시) \"태그명\" : 컴포넌트명 */",
            "            ",
            "        },",
            "        computed: {",
            "            /* 자동처리 + 동기식. 메서드로 작성. return 필수. */",
            "            ",
            "        },",
            "        watch: {",
            "            /* 자동처리 + 비동기식. data 에 등록된 프로퍼티 모니터링. 메서드로 작성. 매개변수 입력 필수  */",
            "            ",
            "        },",
            "        mounted: function() {",
            "            console.log(\"mounted\");",
            "        },",
            "        updated: function() {",
            "            console.log(\"updated\");",
            "        },",
            "    }",
            "</script>"
        ],
        "description": "Vue Single File Component"
    },
    "Vue plugin import": {
        "prefix": "vueplugin",
        "body": [
            "",
            "<!-- vue 플러그인 임포트   -->",
            "<script src=\"https://unpkg.com/vue@2.5.16/dist/vue.js\">/* vue 플러그인 임포트 */</script>",
            "<script src=\"https://unpkg.com/vuex@3.3.0/dist/vuex.js\"> /* vuex 플러그인 임포트 */</script>",
            "<script src=\"https://unpkg.com/vue-router@3.1.6/dist/vue-router.js\"> /* vue 라우터 플러그인 임포트 */</script>",
            "<script src=\"https://unpkg.com/axios/dist/axios.min.js\"> /* axios 플러그인 임포트 */</script>",
            "<script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js\"> /* jQuery 플러그인 임포트 */</script>",
            "<script>",
            "    ",
            "</script>"
        ],
        "description": "Vue plugin import"
    },
    "Axios": {
        "prefix": "axios",
        "body": [
            "// import axios from \"axios\";",
            "",
            "axios({",
            "    url: \"item\",  // 호출되는 서버 주소.",
            "    method: \"get\",       // request method: get, post, delete, put",
            "    params: { },  // 서버로 보내는 데이터. 예시) { data1:\"test1\", data2:\"test2\" } ",
            "    timeout: 30000,    // 최대 대기 시간: 30초. 30초 이상이 되면 fail 부분이 실행됨.",
            "    responseType: \"json\",  // response로 넘어오는 데이터 형태: text, html, xml, json, jsonp, script",
            "})",
            ".then( (res) => {",
            "    console.log(res.data);",
            "    this.message1 = res.data;",
            "})",
            ".catch((error) => {",
            "    console.log(error);",
            "});"
        ],
        "description": "React script"
    },